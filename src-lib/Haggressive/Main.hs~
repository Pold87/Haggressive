{-# OPTIONS_GHC -Wall #-}
{-# LANGUAGE OverloadedStrings #-}

module Haggressive.Main
       (
         main,
         Data.Vector,
         Data.Map
       ) where

import Data.Vector 
import Data.Map

data Tweet = Tweet { category :: String
                   , user :: String
                   , date :: String
                   , time :: String
                   , message :: String
                   } deriving (Show, Eq, Ord)


countItem :: (Ord a) => Map a Int -> a -> Map a Int
countItem m e = insertWith (+) e 1 m

frequency :: Ord a => Vector a -> Map a Int
frequency = Data.Vector.foldl' countItem Data.Map.empty


main :: IO ()
main = 
  print "hey"
